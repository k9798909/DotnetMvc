--
-- PostgreSQL database dump
--

-- Dumped from database version 14.3 (Debian 14.3-1.pgdg110+1)
-- Dumped by pg_dump version 14.3 (Debian 14.3-1.pgdg110+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: AspNetRoleClaims; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."AspNetRoleClaims" (
    "Id" integer NOT NULL,
    "RoleId" text NOT NULL,
    "ClaimType" text,
    "ClaimValue" text
);


ALTER TABLE public."AspNetRoleClaims" OWNER TO postgres;

--
-- Name: AspNetRoleClaims_Id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."AspNetRoleClaims" ALTER COLUMN "Id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."AspNetRoleClaims_Id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: AspNetRoles; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."AspNetRoles" (
    "Id" text NOT NULL,
    "Name" character varying(256),
    "NormalizedName" character varying(256),
    "ConcurrencyStamp" text
);


ALTER TABLE public."AspNetRoles" OWNER TO postgres;

--
-- Name: AspNetUserClaims; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."AspNetUserClaims" (
    "Id" integer NOT NULL,
    "UserId" text NOT NULL,
    "ClaimType" text,
    "ClaimValue" text
);


ALTER TABLE public."AspNetUserClaims" OWNER TO postgres;

--
-- Name: AspNetUserClaims_Id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."AspNetUserClaims" ALTER COLUMN "Id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."AspNetUserClaims_Id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: AspNetUserLogins; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."AspNetUserLogins" (
    "LoginProvider" text NOT NULL,
    "ProviderKey" text NOT NULL,
    "ProviderDisplayName" text,
    "UserId" text NOT NULL
);


ALTER TABLE public."AspNetUserLogins" OWNER TO postgres;

--
-- Name: AspNetUserRoles; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."AspNetUserRoles" (
    "UserId" text NOT NULL,
    "RoleId" text NOT NULL
);


ALTER TABLE public."AspNetUserRoles" OWNER TO postgres;

--
-- Name: AspNetUserTokens; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."AspNetUserTokens" (
    "UserId" text NOT NULL,
    "LoginProvider" text NOT NULL,
    "Name" text NOT NULL,
    "Value" text
);


ALTER TABLE public."AspNetUserTokens" OWNER TO postgres;

--
-- Name: AspNetUsers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."AspNetUsers" (
    "Id" text NOT NULL,
    "Name" text NOT NULL,
    "UserName" character varying(256),
    "NormalizedUserName" character varying(256),
    "Email" character varying(256),
    "NormalizedEmail" character varying(256),
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text,
    "SecurityStamp" text,
    "ConcurrencyStamp" text,
    "PhoneNumber" text,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL
);


ALTER TABLE public."AspNetUsers" OWNER TO postgres;

--
-- Name: __EFMigrationsHistory; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL
);


ALTER TABLE public."__EFMigrationsHistory" OWNER TO postgres;

--
-- Name: article; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.article (
    id integer NOT NULL,
    title character varying(255) NOT NULL,
    content text NOT NULL,
    author_id text NOT NULL,
    category_id integer,
    created_time timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_time timestamp without time zone,
    deleted_time timestamp without time zone
);


ALTER TABLE public.article OWNER TO postgres;

--
-- Name: TABLE article; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.article IS '博客文章';


--
-- Name: COLUMN article.id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.article.id IS '文章的主鍵';


--
-- Name: COLUMN article.title; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.article.title IS '文章標題';


--
-- Name: COLUMN article.content; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.article.content IS '文章內容';


--
-- Name: COLUMN article.author_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.article.author_id IS '作者的ID，參照AspNetUsers表中的ID';


--
-- Name: COLUMN article.category_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.article.category_id IS '分類的ID，參照category表中的ID';


--
-- Name: COLUMN article.created_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.article.created_time IS '文章創建的時間';


--
-- Name: COLUMN article.updated_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.article.updated_time IS '文章最後更新的時間';


--
-- Name: COLUMN article.deleted_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.article.deleted_time IS '標記文章是否已被刪除（如果有時間戳則表示已刪除）';


--
-- Name: article_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.article_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.article_id_seq OWNER TO postgres;

--
-- Name: article_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.article_id_seq OWNED BY public.article.id;


--
-- Name: category; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.category (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    is_active character(1) DEFAULT '1'::bpchar,
    created_time timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_time timestamp without time zone,
    CONSTRAINT category_is_active_check CHECK ((is_active = ANY (ARRAY['0'::bpchar, '1'::bpchar])))
);


ALTER TABLE public.category OWNER TO postgres;

--
-- Name: TABLE category; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.category IS '部落格分類類別';


--
-- Name: COLUMN category.id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.category.id IS '主鍵流水號';


--
-- Name: COLUMN category.name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.category.name IS '分類名稱';


--
-- Name: COLUMN category.is_active; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.category.is_active IS '表示分類是否啟用（1 表示啟用，0 表示不啟用）';


--
-- Name: COLUMN category.created_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.category.created_time IS '創建時間';


--
-- Name: COLUMN category.updated_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.category.updated_time IS '更新時間';


--
-- Name: category_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.category_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.category_id_seq OWNER TO postgres;

--
-- Name: category_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.category_id_seq OWNED BY public.category.id;


--
-- Name: article id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.article ALTER COLUMN id SET DEFAULT nextval('public.article_id_seq'::regclass);


--
-- Name: category id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.category ALTER COLUMN id SET DEFAULT nextval('public.category_id_seq'::regclass);


--
-- Data for Name: AspNetRoleClaims; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."AspNetRoleClaims" ("Id", "RoleId", "ClaimType", "ClaimValue") FROM stdin;
\.


--
-- Data for Name: AspNetRoles; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."AspNetRoles" ("Id", "Name", "NormalizedName", "ConcurrencyStamp") FROM stdin;
\.


--
-- Data for Name: AspNetUserClaims; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."AspNetUserClaims" ("Id", "UserId", "ClaimType", "ClaimValue") FROM stdin;
\.


--
-- Data for Name: AspNetUserLogins; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."AspNetUserLogins" ("LoginProvider", "ProviderKey", "ProviderDisplayName", "UserId") FROM stdin;
\.


--
-- Data for Name: AspNetUserRoles; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."AspNetUserRoles" ("UserId", "RoleId") FROM stdin;
\.


--
-- Data for Name: AspNetUserTokens; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."AspNetUserTokens" ("UserId", "LoginProvider", "Name", "Value") FROM stdin;
\.


--
-- Data for Name: AspNetUsers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."AspNetUsers" ("Id", "Name", "UserName", "NormalizedUserName", "Email", "NormalizedEmail", "EmailConfirmed", "PasswordHash", "SecurityStamp", "ConcurrencyStamp", "PhoneNumber", "PhoneNumberConfirmed", "TwoFactorEnabled", "LockoutEnd", "LockoutEnabled", "AccessFailedCount") FROM stdin;
18f65b1e-9e21-4c44-b5bf-ed981d82e4b6	測試一號	aaa123456789	AAA123456789	aaa123456789@gmail.com	AAA123456789@GMAIL.COM	f	AQAAAAIAAYagAAAAEGi6gta0R28BBL5GIKfGKfsyat9IQ7c3nU1UEw/fFNZOEp4G1AtZE54EA35HgfaQuQ==	GF4GNU3MVJSLJDO7UNK5MSWHOUZ7YZFX	560b5189-e5d8-4971-9665-36e5d595b6c8	\N	f	f	\N	t	0
\.


--
-- Data for Name: __EFMigrationsHistory; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."__EFMigrationsHistory" ("MigrationId", "ProductVersion") FROM stdin;
\.


--
-- Data for Name: article; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.article (id, title, content, author_id, category_id, created_time, updated_time, deleted_time) FROM stdin;
133	旅遊探索	探索世界的各個角落，發現不同的文化和風景。\n從壯觀的自然奇觀到繁忙的城市街道，每個地方都有自己獨特的魅力。\n無論是冒險旅行還是悠閒的假期，都能帶來不同的體驗和回憶。\n本文將帶你了解一些最值得一遊的目的地，以及旅行過程中的有趣故事和實用建議。\n每一次的旅行都是一段新的旅程，帶來不同的見聞和體驗，讓我們一起探索世界的美麗與奇妙。	18f65b1e-9e21-4c44-b5bf-ed981d82e4b6	1	2024-08-01 11:00:00	2024-08-01 11:00:00	\N
134	美食指南	介紹各種美食和餐廳，分享食譜和烹飪技巧。\n無論是當地的街頭小吃還是高級餐廳的精緻菜肴，每一種食物都有它的故事。\n學習如何製作美味的菜肴，並探索新的餐飲趨勢。\n這篇指南不僅包括流行的美食介紹，還有一些不為人知的美味秘方。\n在食物的世界裡，每一道菜背後都有一段故事，讓我們一起發掘和分享這些美食的秘密。	18f65b1e-9e21-4c44-b5bf-ed981d82e4b6	2	2024-08-01 11:05:00	2024-08-01 11:05:00	\N
135	技術趨勢	討論最新的技術趨勢和行業發展。\n從人工智能到區塊鏈技術，每一項創新都在改變我們的生活和工作方式。\n了解最新的科技新聞，掌握未來的技術動態。\n本文還將探討一些未來可能改變世界的新興技術，以及它們的潛在應用場景。\n技術的快速發展改變了我們的工作和生活方式，了解這些趨勢有助於我們未來的發展和選擇。	18f65b1e-9e21-4c44-b5bf-ed981d82e4b6	3	2024-08-01 11:10:00	2024-08-01 11:10:00	\N
136	理財策略	提供理財建議和策略，幫助你管理財務。\n無論是制定預算、儲蓄計劃，還是投資策略，良好的理財習慣能夠幫助你實現財務目標。\n學習如何管理和增值你的資產。\n本文會深入分析如何制定有效的理財計劃，並分享一些成功的理財案例。\n理財不僅是關於如何賺錢，更是如何讓你的財富持續增值並有效地達成你的財務目標。	18f65b1e-9e21-4c44-b5bf-ed981d82e4b6	4	2024-08-01 11:15:00	2024-08-01 11:15:00	\N
137	汽車評測	測試和評價最新的汽車型號和技術。\n了解汽車的性能、燃油效率、安全性和舒適性，幫助你做出明智的購車決策。\n比較不同品牌和型號，選擇最適合你的汽車。\n本文將提供詳細的汽車評測，包括內部配置、駕駛體驗以及各種性能指標。\n汽車市場的競爭激烈，了解各種車型的優缺點能幫助你找到最適合你的選擇。	18f65b1e-9e21-4c44-b5bf-ed981d82e4b6	5	2024-08-01 11:20:00	2024-08-01 11:20:00	\N
138	生活小竅門	分享實用的生活技巧和建議。\n從家庭清潔到時間管理，這些小竅門能夠幫助你提高生活質量，簡化日常任務，讓生活變得更輕鬆和愉快。\n這篇文章將提供一系列有用的生活建議，幫助你輕鬆應對日常挑戰。\n這些技巧經過實踐證明能夠提高生活效率，讓你在繁忙的生活中找到更多的輕鬆和愉悅。	18f65b1e-9e21-4c44-b5bf-ed981d82e4b6	6	2024-08-01 11:25:00	2024-08-01 11:25:00	\N
139	科技創新	報導最新的科技創新和發展。\n從新型智能設備到創新的軟體應用，了解科技界的最新突破和前沿技術。\n探討這些創新如何影響我們的生活和工作。\n本文還將分析一些正在改變行業的技術趨勢，以及它們對未來的影響。\n隨著科技的迅速發展，了解這些創新能夠幫助我們更好地適應未來的變化和挑戰。	18f65b1e-9e21-4c44-b5bf-ed981d82e4b6	7	2024-08-01 11:30:00	2024-08-01 11:30:00	\N
140	健身計畫	提供不同的健身計畫和健康建議。\n無論是減肥、增肌還是提升耐力，這些計畫能夠幫助你達成健身目標。\n了解如何設計有效的健身方案，保持身體健康。\n本文包括詳細的健身計畫建議、飲食指南以及如何追蹤健身進度。\n健身計畫的制定需要根據你的目標和身體狀況量身定制，才能達到最佳效果。	18f65b1e-9e21-4c44-b5bf-ed981d82e4b6	1	2024-08-01 12:00:00	2024-08-01 12:00:00	\N
141	心理健康	分享保持心理健康的方法和技巧。\n學習如何應對壓力、焦慮和其他心理挑戰，提升自我照顧和心理韌性。\n探索心理健康的重要性及其對生活的影響。\n本文將提供應對心理挑戰的實用建議，並介紹一些心理健康相關的資源和支持系統。\n心理健康同樣重要，良好的心理狀態能夠提升生活質量和應對各種挑戰的能力。	18f65b1e-9e21-4c44-b5bf-ed981d82e4b6	2	2024-08-01 12:05:00	2024-08-01 12:05:00	\N
142	音樂欣賞	介紹不同類型的音樂和音樂欣賞技巧。\n探索各種音樂風格和流派，了解音樂的歷史和文化背景，提升你的音樂欣賞能力。\n本文將涵蓋多種音樂類型的介紹，並提供提高音樂欣賞能力的實用技巧。\n音樂是一種普遍的藝術形式，了解其多樣性和演變過程可以增進我們對音樂的欣賞和理解。	18f65b1e-9e21-4c44-b5bf-ed981d82e4b6	3	2024-08-01 12:10:00	2024-08-01 12:10:00	\N
143	電影評論	分析和評論最新上映的電影。\n從劇情、演技到導演的藝術風格，提供全面的電影評價。\n了解電影的細節，幫助你選擇值得一看的影片。\n本文將深入剖析一些熱門電影，並提供關於影評和觀影建議的詳細資訊。\n電影作為視覺和情感的藝術表現，深入分析其內涵和技術可以提升我們對影視作品的欣賞。	18f65b1e-9e21-4c44-b5bf-ed981d82e4b6	4	2024-08-01 12:15:00	2024-08-01 12:15:00	\N
144	時尚潮流	探索最新的時尚潮流和穿搭建議。\n了解當前的時尚趨勢，獲取穿搭靈感和建議，提升你的時尚品味。\n了解如何根據季節和場合選擇適合的服裝。\n本文包括時尚界的最新趨勢、穿搭建議以及如何選擇適合你的服裝。\n時尚不僅是關於穿著，還反映了個人的風格和品味，了解時尚潮流可以幫助你展現最好的自己。	18f65b1e-9e21-4c44-b5bf-ed981d82e4b6	5	2024-08-01 12:20:00	2024-08-01 12:20:00	\N
145	創業故事	分享成功創業者的故事和經驗。\n從創業的挑戰到成功的秘訣，了解創業過程中的經歷和教訓。\n獲取啟發和實用的建議，助力你的創業夢想。\n本文將講述一些創業成功的實例，並提供創業過程中的實用建議。\n創業路上充滿挑戰和機遇，了解成功的故事可以激勵和指導你的創業旅程。	18f65b1e-9e21-4c44-b5bf-ed981d82e4b6	6	2024-08-01 12:25:00	2024-08-01 12:25:00	\N
146	環保理念	討論如何實踐環保理念並改善環境。\n了解環保的重要性，學習如何在日常生活中做出可持續的選擇，為保護地球出一份力。\n本文將介紹環保的基本概念、實踐技巧，以及一些可以採取的環保行動。\n環保不僅僅是口號，更是我們每個人應該履行的責任，了解如何實踐可以幫助我們為未來創造更美好的地球。	18f65b1e-9e21-4c44-b5bf-ed981d82e4b6	7	2024-08-01 12:30:00	2024-08-01 12:30:00	\N
147	家居裝修	提供家居裝修的技巧和建議。\n從空間規劃到選擇材料，了解如何打造舒適和美觀的家居環境。\n獲取專業的裝修建議，提升你的居住品質。\n本文涵蓋了裝修過程中的每一個步驟，並提供了一些實用的設計建議和技巧。\n家居裝修是改善生活環境的重要方式，通過合理的設計和材料選擇可以創造出令人滿意的居住空間。	18f65b1e-9e21-4c44-b5bf-ed981d82e4b6	1	2024-08-01 12:35:00	2024-08-01 12:35:00	\N
148	社交技巧	改善社交技巧，建立良好的人際關係。\n學習如何更有效地溝通、建立信任和處理衝突，提升你的社交能力和人際網絡。\n這篇文章將提供一些增強社交技巧的實用建議，並探討如何在不同的社交場合中表現得更得體。\n社交技巧在日常生活和職場中都非常重要，提升這些技能可以幫助你建立更好的人際關係和社交網絡。	18f65b1e-9e21-4c44-b5bf-ed981d82e4b6	2	2024-08-01 12:40:00	2024-08-01 12:40:00	\N
\.


--
-- Data for Name: category; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.category (id, name, is_active, created_time, updated_time) FROM stdin;
1	旅遊	1	2024-08-01 10:00:00	2024-08-01 10:00:00
2	美食	1	2024-08-01 10:05:00	2024-08-01 10:05:00
3	技術	1	2024-08-01 10:10:00	2024-08-01 10:10:00
4	理財	1	2024-08-01 10:15:00	2024-08-01 10:15:00
5	汽車	1	2024-08-01 10:20:00	2024-08-01 10:20:00
6	生活	1	2024-08-01 10:25:00	2024-08-01 10:25:00
7	科技	1	2024-08-01 10:30:00	2024-08-01 10:30:00
\.


--
-- Name: AspNetRoleClaims_Id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."AspNetRoleClaims_Id_seq"', 1, false);


--
-- Name: AspNetUserClaims_Id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."AspNetUserClaims_Id_seq"', 1, false);


--
-- Name: article_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.article_id_seq', 148, true);


--
-- Name: category_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.category_id_seq', 7, true);


--
-- Name: AspNetRoleClaims PK_AspNetRoleClaims; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetRoleClaims"
    ADD CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id");


--
-- Name: AspNetRoles PK_AspNetRoles; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetRoles"
    ADD CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id");


--
-- Name: AspNetUserClaims PK_AspNetUserClaims; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetUserClaims"
    ADD CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id");


--
-- Name: AspNetUserLogins PK_AspNetUserLogins; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetUserLogins"
    ADD CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey");


--
-- Name: AspNetUserRoles PK_AspNetUserRoles; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetUserRoles"
    ADD CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId");


--
-- Name: AspNetUserTokens PK_AspNetUserTokens; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetUserTokens"
    ADD CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name");


--
-- Name: AspNetUsers PK_AspNetUsers; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetUsers"
    ADD CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id");


--
-- Name: __EFMigrationsHistory PK___EFMigrationsHistory; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."__EFMigrationsHistory"
    ADD CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId");


--
-- Name: article article_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.article
    ADD CONSTRAINT article_pkey PRIMARY KEY (id);


--
-- Name: category category_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.category
    ADD CONSTRAINT category_pkey PRIMARY KEY (id);


--
-- Name: EmailIndex; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "EmailIndex" ON public."AspNetUsers" USING btree ("NormalizedEmail");


--
-- Name: IX_AspNetRoleClaims_RoleId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON public."AspNetRoleClaims" USING btree ("RoleId");


--
-- Name: IX_AspNetUserClaims_UserId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_AspNetUserClaims_UserId" ON public."AspNetUserClaims" USING btree ("UserId");


--
-- Name: IX_AspNetUserLogins_UserId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_AspNetUserLogins_UserId" ON public."AspNetUserLogins" USING btree ("UserId");


--
-- Name: IX_AspNetUserRoles_RoleId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_AspNetUserRoles_RoleId" ON public."AspNetUserRoles" USING btree ("RoleId");


--
-- Name: NormalizedUserNameIndex; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX "NormalizedUserNameIndex" ON public."AspNetUsers" USING btree ("NormalizedUserName");


--
-- Name: RoleNameIndex; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX "RoleNameIndex" ON public."AspNetRoles" USING btree ("NormalizedName");


--
-- Name: UserNameIndex; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX "UserNameIndex" ON public."AspNetUsers" USING btree ("UserName");


--
-- Name: idx_article_author_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_article_author_id ON public.article USING btree (author_id);


--
-- Name: idx_article_category_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_article_category_id ON public.article USING btree (category_id);


--
-- Name: AspNetRoleClaims FK_AspNetRoleClaims_AspNetRoles_RoleId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetRoleClaims"
    ADD CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES public."AspNetRoles"("Id") ON DELETE CASCADE;


--
-- Name: AspNetUserClaims FK_AspNetUserClaims_AspNetUsers_UserId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetUserClaims"
    ADD CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES public."AspNetUsers"("Id") ON DELETE CASCADE;


--
-- Name: AspNetUserLogins FK_AspNetUserLogins_AspNetUsers_UserId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetUserLogins"
    ADD CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES public."AspNetUsers"("Id") ON DELETE CASCADE;


--
-- Name: AspNetUserRoles FK_AspNetUserRoles_AspNetRoles_RoleId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetUserRoles"
    ADD CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES public."AspNetRoles"("Id") ON DELETE CASCADE;


--
-- Name: AspNetUserRoles FK_AspNetUserRoles_AspNetUsers_UserId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetUserRoles"
    ADD CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES public."AspNetUsers"("Id") ON DELETE CASCADE;


--
-- Name: AspNetUserTokens FK_AspNetUserTokens_AspNetUsers_UserId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetUserTokens"
    ADD CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES public."AspNetUsers"("Id") ON DELETE CASCADE;


--
-- Name: article article_author_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.article
    ADD CONSTRAINT article_author_id_fkey FOREIGN KEY (author_id) REFERENCES public."AspNetUsers"("Id");


--
-- Name: article article_category_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.article
    ADD CONSTRAINT article_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.category(id);


--
-- PostgreSQL database dump complete
--

